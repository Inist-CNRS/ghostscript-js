%!PS-Adobe-3.0
%%Title: (Microsoft Word - A.doc)
%%Version: 1 4
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 12:37:17 03/15/05
%%For: (NT7493)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 0 0 595 842
%%HiResBoundingBox: 0.0 0.0 595.0 842.0
%%Pages: 12
%%DocumentProcessColors: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W1 vm op crd OS scsa T h ef bg ucr sf ef r b fa pr seps ttf hb Printer/PostScript Color Management 0

%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
userdict /pdf_svglb currentglobal put true setglobal

userdict /pdf_svglb get setglobal
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[userdict /pdf_svglb currentglobal put true setglobal
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end

userdict /pdf_svglb get setglobal
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
/N34 [/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/ColorSpace defineRes pop

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_PS} /type /stream /OBJ PDFMark5
[{Metadata_In_PS} 1203 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-14, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:70bf7ecf-65cf-4042-9294-cd53b473d2a1' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Ac NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with<rdf:Description rdf:about='uuid:70bf7ecf-65cf-4042-9294-cd53b473d2a1' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreateDate=' NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with<rdf:Description rdf:about='uuid:70bf7ecf-65cf-4042-9294-cd53b473d2a1' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:Docum NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with<rdf:Description rdf:about='uuid:70bf7ecf-65cf-4042-9294-cd53b473d2a1' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='ap NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with</rdf:RDF>
</x:xmpmeta>
                                                                                                                                 NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with                                                                                                                                 NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with                                                                                                                                 NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with                                                                                                                                 NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with                                                                                                                                 NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with                                                                                                                                 NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with                                                                                                                                 NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with                                                                                                                                 NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with                                                                                                                                 NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with                                                                                                                                 NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with                                                                                                                                 NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with                                                                                                                                 NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with                                                                                                                                 NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with                                                                                                                                 NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with                                                                                                                                 NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with                                                                                                                                 NO WARRANTY: see the file PUBLIC for details.
) 2004 artofcode LLC, Benicia, CA.  All rights reserved.
This software comes with<?xpacket end='w'?>

% &end XMP packet& %

[{Metadata_In_PS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[{Catalog} {Metadata_In_PS} /Metadata PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
%%Page: 1 1
%%PageBoundingBox: 0 0 595 842
%%PageHiResBoundingBox: 0.0 0.0 595.0 842.0
%%PageCropBox:  0 0 595 842
gsave
%%BeginPageSetup
{<</PageSize [595.0 842.0] /Policies <</PageSize 1>> >> setpagedevice }stopped pop
PDFVars begin PDF begin PDFVars/InitAll get exec
userdict /pgsave save put
0.0 0.0 595.0 842.0 0.0 0.0 595.0 842.0 0 0 false true false false PDF begin PDFVars begin ASR end end
%%EndPageSetup
0.0 0.0 595.0 842.0 re
W
n
n
199.259995 525.619995 m
136.259995 525.619995 l
127.619995 496.039978 l
71.099998 496.039978 l
138.360001 675.019958 l
198.659988 675.019958 l
265.919983 496.039978 l
208.019989 496.039978 l
199.259995 525.619995 l
h
187.679993 564.320007 m
167.87999 628.640015 l
148.199997 564.320007 l
187.679993 564.320007 l
f
n
199.259995 173.119995 m
136.259995 173.119995 l
127.619995 143.539993 l
71.099998 143.539993 l
138.360001 322.519989 l
198.659988 322.519989 l
265.919983 143.539993 l
208.019989 143.539993 l
199.259995 173.119995 l
h
187.679993 211.819992 m
167.87999 276.139984 l
148.199997 211.819992 l
187.679993 211.819992 l
h
393.720001 173.119995 m
330.720001 173.119995 l
322.079987 143.539993 l
265.559998 143.539993 l
332.820007 322.519989 l
393.119995 322.519989 l
460.380005 143.539993 l
402.47998 143.539993 l
393.720001 173.119995 l
h
382.139984 211.819992 m
362.339996 276.139984 l
342.660004 211.819992 l
382.139984 211.819992 l
f
n
userdict /pgsave get restore
showpage
PDFVars/TermAll get exec end end
grestore
%%PageTrailer
%%Page: 2 2
%%PageBoundingBox: 0 0 595 842
%%PageHiResBoundingBox: 0.0 0.0 595.0 842.0
%%PageCropBox:  0 0 595 842
gsave
%%BeginPageSetup
{<</PageSize [595.0 842.0] /Policies <</PageSize 1>> >> setpagedevice }stopped pop
PDFVars begin PDF begin PDFVars/InitAll get exec
userdict /pgsave save put
0.0 0.0 595.0 842.0 0.0 0.0 595.0 842.0 0 0 false true false false PDF begin PDFVars begin ASR end end
%%EndPageSetup
0.0 0.0 595.0 842.0 re
W
n
n
89.279999 675.019958 m
192.779999 675.019958 l
210.059998 675.019958 223.259995 670.76001 232.5 662.23999 c
241.73999 653.659973 246.360001 643.100037 246.360001 630.5 c
246.360001 619.880005 243.059998 610.820007 236.519989 603.26001 c
232.080002 598.219971 225.659988 594.200012 217.199997 591.26001 c
230.039993 588.200012 239.519989 582.859985 245.580002 575.359985 c
251.639999 567.799988 254.699997 558.380005 254.699997 546.97998 c
254.699997 537.679993 252.539993 529.339966 248.220001 521.959961 c
243.900009 514.519958 238.019989 508.700012 230.519989 504.379974 c
225.900009 501.679993 218.87999 499.700012 209.519989 498.5 c
197.039993 496.879974 188.819992 496.039978 184.73999 496.039978 c
89.279999 496.039978 l
89.279999 675.019958 l
h
145.080002 604.820007 m
169.080002 604.820007 l
177.720001 604.820007 183.720001 606.320007 187.139999 609.320007 c
190.5 612.26001 192.179993 616.579956 192.179993 622.159973 c
192.179993 627.380005 190.5 631.459961 187.139999 634.400024 c
183.720001 637.279968 177.839996 638.779968 169.5 638.779968 c
145.080002 638.779968 l
145.080002 604.820007 l
h
145.080002 534.5 m
173.279999 534.5 l
182.759995 534.5 189.479996 536.179993 193.37999 539.600037 c
197.279999 542.959961 199.259995 547.519958 199.259995 553.219971 c
199.259995 558.5 197.339996 562.76001 193.440002 565.940002 c
189.600006 569.179993 182.819992 570.799988 173.160004 570.799988 c
145.080002 570.799988 l
145.080002 534.5 l
h
283.73999 675.019958 m
387.23999 675.019958 l
404.519989 675.019958 417.720001 670.76001 426.959991 662.23999 c
436.200012 653.659973 440.819977 643.100037 440.819977 630.5 c
440.819977 619.880005 437.519989 610.820007 430.97998 603.26001 c
426.539978 598.219971 420.119995 594.200012 411.660004 591.26001 c
424.5 588.200012 433.97998 582.859985 440.039978 575.359985 c
446.100006 567.799988 449.160004 558.380005 449.160004 546.97998 c
449.160004 537.679993 447.0 529.339966 442.679993 521.959961 c
438.359985 514.519958 432.47998 508.700012 424.97998 504.379974 c
420.359985 501.679993 413.339996 499.700012 403.97998 498.5 c
391.5 496.879974 383.279999 496.039978 379.200012 496.039978 c
283.73999 496.039978 l
283.73999 675.019958 l
h
339.539978 604.820007 m
363.539978 604.820007 l
372.179993 604.820007 378.179993 606.320007 381.600006 609.320007 c
384.959991 612.26001 386.639984 616.579956 386.639984 622.159973 c
386.639984 627.380005 384.959991 631.459961 381.600006 634.400024 c
378.179993 637.279968 372.300018 638.779968 363.959991 638.779968 c
339.539978 638.779968 l
339.539978 604.820007 l
h
339.539978 534.5 m
367.73999 534.5 l
377.220001 534.5 383.940002 536.179993 387.839996 539.600037 c
391.73999 542.959961 393.720001 547.519958 393.720001 553.219971 c
393.720001 558.5 391.800018 562.76001 387.899994 565.940002 c
384.059998 569.179993 377.279999 570.799988 367.619995 570.799988 c
339.539978 570.799988 l
339.539978 534.5 l
f
n
89.279999 322.519989 m
192.779999 322.519989 l
210.059998 322.519989 223.259995 318.259979 232.5 309.73999 c
241.73999 301.160004 246.360001 290.600006 246.360001 278.0 c
246.360001 267.380005 243.059998 258.320007 236.519989 250.759995 c
232.080002 245.720001 225.659988 241.699997 217.199997 238.759995 c
230.039993 235.699997 239.519989 230.360001 245.580002 222.860001 c
251.639999 215.300003 254.699997 205.87999 254.699997 194.479996 c
254.699997 185.179993 252.539993 176.839996 248.220001 169.459991 c
243.900009 162.019989 238.019989 156.199997 230.519989 151.87999 c
225.900009 149.179993 218.87999 147.199997 209.519989 146.0 c
197.039993 144.37999 188.819992 143.539993 184.73999 143.539993 c
89.279999 143.539993 l
89.279999 322.519989 l
h
145.080002 252.319992 m
169.080002 252.319992 l
177.720001 252.319992 183.720001 253.819992 187.139999 256.820007 c
190.5 259.759979 192.179993 264.079987 192.179993 269.660004 c
192.179993 274.880005 190.5 278.959991 187.139999 281.899994 c
183.720001 284.779999 177.839996 286.279999 169.5 286.279999 c
145.080002 286.279999 l
145.080002 252.319992 l
h
145.080002 182.0 m
173.279999 182.0 l
182.759995 182.0 189.479996 183.679993 193.37999 187.100006 c
197.279999 190.459991 199.259995 195.019989 199.259995 200.720001 c
199.259995 206.0 197.339996 210.259995 193.440002 213.440002 c
189.600006 216.679993 182.819992 218.300003 173.160004 218.300003 c
145.080002 218.300003 l
145.080002 182.0 l
h
283.73999 322.519989 m
387.23999 322.519989 l
404.519989 322.519989 417.720001 318.259979 426.959991 309.73999 c
436.200012 301.160004 440.819977 290.600006 440.819977 278.0 c
440.819977 267.380005 437.519989 258.320007 430.97998 250.759995 c
426.539978 245.720001 420.119995 241.699997 411.660004 238.759995 c
424.5 235.699997 433.97998 230.360001 440.039978 222.860001 c
446.100006 215.300003 449.160004 205.87999 449.160004 194.479996 c
449.160004 185.179993 447.0 176.839996 442.679993 169.459991 c
438.359985 162.019989 432.47998 156.199997 424.97998 151.87999 c
420.359985 149.179993 413.339996 147.199997 403.97998 146.0 c
391.5 144.37999 383.279999 143.539993 379.200012 143.539993 c
283.73999 143.539993 l
283.73999 322.519989 l
h
339.539978 252.319992 m
363.539978 252.319992 l
372.179993 252.319992 378.179993 253.819992 381.600006 256.820007 c
384.959991 259.759979 386.639984 264.079987 386.639984 269.660004 c
386.639984 274.880005 384.959991 278.959991 381.600006 281.899994 c
378.179993 284.779999 372.300018 286.279999 363.959991 286.279999 c
339.539978 286.279999 l
339.539978 252.319992 l
h
339.539978 182.0 m
367.73999 182.0 l
377.220001 182.0 383.940002 183.679993 387.839996 187.100006 c
391.73999 190.459991 393.720001 195.019989 393.720001 200.720001 c
393.720001 206.0 391.800018 210.259995 387.899994 213.440002 c
384.059998 216.679993 377.279999 218.300003 367.619995 218.300003 c
339.539978 218.300003 l
339.539978 182.0 l
f
n
userdict /pgsave get restore
showpage
PDFVars/TermAll get exec end end
grestore
%%PageTrailer
%%Page: 3 3
%%PageBoundingBox: 0 0 595 842
%%PageHiResBoundingBox: 0.0 0.0 595.0 842.0
%%PageCropBox:  0 0 595 842
gsave
%%BeginPageSetup
{<</PageSize [595.0 842.0] /Policies <</PageSize 1>> >> setpagedevice }stopped pop
PDFVars begin PDF begin PDFVars/InitAll get exec
userdict /pgsave save put
0.0 0.0 595.0 842.0 0.0 0.0 595.0 842.0 0 0 false true false false PDF begin PDFVars begin ASR end end
%%EndPageSetup
0.0 0.0 595.0 842.0 re
W
n
n
208.319992 569.179993 m
256.73999 554.539978 l
253.5 540.919983 248.400009 529.580017 241.37999 520.459961 c
234.360001 511.339996 225.720001 504.5 215.339996 499.819977 c
204.959991 495.200012 191.759995 492.919983 175.679993 492.919983 c
156.23999 492.919983 140.339996 495.73999 128.039993 501.379974 c
115.68 507.019989 105.059998 516.97998 96.119995 531.200012 c
87.119995 545.47998 82.68 563.719971 82.68 585.919983 c
82.68 615.559998 90.540001 638.299988 106.32 654.200012 c
122.040001 670.100037 144.300003 678.079956 173.160004 678.079956 c
195.659988 678.079956 213.419998 673.519958 226.319992 664.400024 c
239.220001 655.279968 248.759995 641.299988 255.059998 622.400024 c
206.220001 611.539978 l
204.479996 617.0 202.73999 621.019958 200.819992 623.539978 c
197.759995 627.73999 193.979996 630.97998 189.479996 633.26001 c
185.039993 635.539978 180.0 636.679993 174.479996 636.679993 c
161.940002 636.679993 152.339996 631.640015 145.679993 621.559998 c
140.639999 614.059998 138.119995 602.299988 138.119995 586.279968 c
138.119995 566.419983 141.119995 552.799988 147.119995 545.419983 c
153.179993 538.100037 161.639999 534.380005 172.5 534.380005 c
183.119995 534.380005 191.100006 537.380005 196.5 543.320007 c
201.900009 549.26001 205.860001 557.900024 208.319992 569.179993 c
h
402.779999 569.179993 m
451.200012 554.539978 l
447.959991 540.919983 442.859985 529.580017 435.839996 520.459961 c
428.819977 511.339996 420.179993 504.5 409.800018 499.819977 c
399.419983 495.200012 386.220001 492.919983 370.139984 492.919983 c
350.700012 492.919983 334.800018 495.73999 322.5 501.379974 c
310.139984 507.019989 299.519989 516.97998 290.579987 531.200012 c
281.579987 545.47998 277.139984 563.719971 277.139984 585.919983 c
277.139984 615.559998 285.0 638.299988 300.779999 654.200012 c
316.5 670.100037 338.759979 678.079956 367.619995 678.079956 c
390.119995 678.079956 407.880005 673.519958 420.779999 664.400024 c
433.679993 655.279968 443.220001 641.299988 449.519989 622.400024 c
400.679993 611.539978 l
398.940002 617.0 397.200012 621.019958 395.279999 623.539978 c
392.220001 627.73999 388.440002 630.97998 383.940002 633.26001 c
379.5 635.539978 374.459991 636.679993 368.940002 636.679993 c
356.399994 636.679993 346.800018 631.640015 340.139984 621.559998 c
335.100006 614.059998 332.579987 602.299988 332.579987 586.279968 c
332.579987 566.419983 335.579987 552.799988 341.579987 545.419983 c
347.639984 538.100037 356.100006 534.380005 366.959991 534.380005 c
377.579987 534.380005 385.559998 537.380005 390.959991 543.320007 c
396.359985 549.26001 400.319977 557.900024 402.779999 569.179993 c
f
n
208.319992 216.679993 m
256.73999 202.039993 l
253.5 188.419998 248.400009 177.080002 241.37999 167.959991 c
234.360001 158.839996 225.720001 152.0 215.339996 147.319992 c
204.959991 142.699997 191.759995 140.419998 175.679993 140.419998 c
156.23999 140.419998 140.339996 143.23999 128.039993 148.87999 c
115.68 154.519989 105.059998 164.479996 96.119995 178.699997 c
87.119995 192.979996 82.68 211.220001 82.68 233.419998 c
82.68 263.059998 90.540001 285.800018 106.32 301.700012 c
122.040001 317.600006 144.300003 325.579987 173.160004 325.579987 c
195.659988 325.579987 213.419998 321.019989 226.319992 311.899994 c
239.220001 302.779999 248.759995 288.800018 255.059998 269.899994 c
206.220001 259.040009 l
204.479996 264.5 202.73999 268.519989 200.819992 271.040009 c
197.759995 275.23999 193.979996 278.47998 189.479996 280.759979 c
185.039993 283.040009 180.0 284.179993 174.479996 284.179993 c
161.940002 284.179993 152.339996 279.139984 145.679993 269.059998 c
140.639999 261.559998 138.119995 249.800003 138.119995 233.779999 c
138.119995 213.919998 141.119995 200.300003 147.119995 192.919998 c
153.179993 185.600006 161.639999 181.87999 172.5 181.87999 c
183.119995 181.87999 191.100006 184.87999 196.5 190.819992 c
201.900009 196.759995 205.860001 205.400009 208.319992 216.679993 c
h
402.779999 216.679993 m
451.200012 202.039993 l
447.959991 188.419998 442.859985 177.080002 435.839996 167.959991 c
428.819977 158.839996 420.179993 152.0 409.800018 147.319992 c
399.419983 142.699997 386.220001 140.419998 370.139984 140.419998 c
350.700012 140.419998 334.800018 143.23999 322.5 148.87999 c
310.139984 154.519989 299.519989 164.479996 290.579987 178.699997 c
281.579987 192.979996 277.139984 211.220001 277.139984 233.419998 c
277.139984 263.059998 285.0 285.800018 300.779999 301.700012 c
316.5 317.600006 338.759979 325.579987 367.619995 325.579987 c
390.119995 325.579987 407.880005 321.019989 420.779999 311.899994 c
433.679993 302.779999 443.220001 288.800018 449.519989 269.899994 c
400.679993 259.040009 l
398.940002 264.5 397.200012 268.519989 395.279999 271.040009 c
392.220001 275.23999 388.440002 278.47998 383.940002 280.759979 c
379.5 283.040009 374.459991 284.179993 368.940002 284.179993 c
356.399994 284.179993 346.800018 279.139984 340.139984 269.059998 c
335.100006 261.559998 332.579987 249.800003 332.579987 233.779999 c
332.579987 213.919998 335.579987 200.300003 341.579987 192.919998 c
347.639984 185.600006 356.100006 181.87999 366.959991 181.87999 c
377.579987 181.87999 385.559998 184.87999 390.959991 190.819992 c
396.359985 196.759995 400.319977 205.400009 402.779999 216.679993 c
f
n
userdict /pgsave get restore
showpage
PDFVars/TermAll get exec end end
grestore
%%PageTrailer
%%Page: 5 5
%%PageBoundingBox: 0 0 595 842
%%PageHiResBoundingBox: 0.0 0.0 595.0 842.0
%%PageCropBox:  0 0 595 842
gsave
%%BeginPageSetup
{<</PageSize [595.0 842.0] /Policies <</PageSize 1>> >> setpagedevice }stopped pop
PDFVars begin PDF begin PDFVars/InitAll get exec
userdict /pgsave save put
0.0 0.0 595.0 842.0 0.0 0.0 595.0 842.0 0 0 false true false false PDF begin PDFVars begin ASR end end
%%EndPageSetup
0.0 0.0 595.0 842.0 re
W
n
n
89.040001 675.019958 m
237.23999 675.019958 l
237.23999 636.799988 l
144.419998 636.799988 l
144.419998 608.359985 l
230.519989 608.359985 l
230.519989 571.880005 l
144.419998 571.880005 l
144.419998 536.600037 l
239.939987 536.600037 l
239.939987 496.039978 l
89.040001 496.039978 l
89.040001 675.019958 l
h
269.579987 675.019958 m
417.779999 675.019958 l
417.779999 636.799988 l
324.959991 636.799988 l
324.959991 608.359985 l
411.059998 608.359985 l
411.059998 571.880005 l
324.959991 571.880005 l
324.959991 536.600037 l
420.47998 536.600037 l
420.47998 496.039978 l
269.579987 496.039978 l
269.579987 675.019958 l
f
n
89.040001 322.519989 m
237.23999 322.519989 l
237.23999 284.300018 l
144.419998 284.300018 l
144.419998 255.860001 l
230.519989 255.860001 l
230.519989 219.37999 l
144.419998 219.37999 l
144.419998 184.100006 l
239.939987 184.100006 l
239.939987 143.539993 l
89.040001 143.539993 l
89.040001 322.519989 l
h
269.579987 322.519989 m
417.779999 322.519989 l
417.779999 284.300018 l
324.959991 284.300018 l
324.959991 255.860001 l
411.059998 255.860001 l
411.059998 219.37999 l
324.959991 219.37999 l
324.959991 184.100006 l
420.47998 184.100006 l
420.47998 143.539993 l
269.579987 143.539993 l
269.579987 322.519989 l
f
n
userdict /pgsave get restore
showpage
PDFVars/TermAll get exec end end
grestore
%%PageTrailer
%%Page: 6 6
%%PageBoundingBox: 0 0 595 842
%%PageHiResBoundingBox: 0.0 0.0 595.0 842.0
%%PageCropBox:  0 0 595 842
gsave
%%BeginPageSetup
{<</PageSize [595.0 842.0] /Policies <</PageSize 1>> >> setpagedevice }stopped pop
PDFVars begin PDF begin PDFVars/InitAll get exec
userdict /pgsave save put
0.0 0.0 595.0 842.0 0.0 0.0 595.0 842.0 0 0 false true false false PDF begin PDFVars begin ASR end end
%%EndPageSetup
0.0 0.0 595.0 842.0 re
W
n
n
89.400002 675.019958 m
226.139999 675.019958 l
226.139999 636.559998 l
144.959991 636.559998 l
144.959991 605.299988 l
214.259995 605.299988 l
214.259995 569.179993 l
144.959991 569.179993 l
144.959991 496.039978 l
89.400002 496.039978 l
89.400002 675.019958 l
h
256.139984 675.019958 m
392.880005 675.019958 l
392.880005 636.559998 l
311.700012 636.559998 l
311.700012 605.299988 l
381.0 605.299988 l
381.0 569.179993 l
311.700012 569.179993 l
311.700012 496.039978 l
256.139984 496.039978 l
256.139984 675.019958 l
f
n
89.400002 322.519989 m
226.139999 322.519989 l
226.139999 284.059998 l
144.959991 284.059998 l
144.959991 252.800003 l
214.259995 252.800003 l
214.259995 216.679993 l
144.959991 216.679993 l
144.959991 143.539993 l
89.400002 143.539993 l
89.400002 322.519989 l
h
256.139984 322.519989 m
392.880005 322.519989 l
392.880005 284.059998 l
311.700012 284.059998 l
311.700012 252.800003 l
381.0 252.800003 l
381.0 216.679993 l
311.700012 216.679993 l
311.700012 143.539993 l
256.139984 143.539993 l
256.139984 322.519989 l
f
n
userdict /pgsave get restore
showpage
PDFVars/TermAll get exec end end
grestore
%%PageTrailer
%%Page: 7 7
%%PageBoundingBox: 0 0 595 842
%%PageHiResBoundingBox: 0.0 0.0 595.0 842.0
%%PageCropBox:  0 0 595 842
gsave
%%BeginPageSetup
{<</PageSize [595.0 842.0] /Policies <</PageSize 1>> >> setpagedevice }stopped pop
PDFVars begin PDF begin PDFVars/InitAll get exec
userdict /pgsave save put
0.0 0.0 595.0 842.0 0.0 0.0 595.0 842.0 0 0 false true false false PDF begin PDFVars begin ASR end end
%%EndPageSetup
0.0 0.0 595.0 842.0 re
W
n
n
179.100006 560.900024 m
179.100006 598.100037 l
264.600006 598.100037 l
264.600006 521.839966 l
248.220001 510.679993 233.759995 503.059998 221.159988 499.039978 c
208.619995 495.019989 193.679993 493.039978 176.400009 493.039978 c
155.160004 493.039978 137.87999 496.639984 124.5 503.899994 c
111.119995 511.100006 100.739998 521.900024 93.360001 536.23999 c
85.979996 550.580017 82.32 567.019958 82.32 585.559998 c
82.32 605.059998 86.339996 622.039978 94.379997 636.5 c
102.479996 650.959961 114.239998 661.940002 129.779999 669.440002 c
141.900009 675.200012 158.220001 678.079956 178.73999 678.079956 c
198.539993 678.079956 213.300003 676.279968 223.139999 672.73999 c
232.919998 669.140015 241.080002 663.559998 247.559998 656.059998 c
254.039993 648.5 258.899994 638.959961 262.139984 627.440002 c
208.800003 617.900024 l
206.580002 624.679993 202.860001 629.839966 197.639999 633.380005 c
192.360001 636.97998 185.639999 638.779968 177.539993 638.779968 c
165.419998 638.779968 155.759995 634.579956 148.559998 626.119995 c
141.360001 617.719971 137.759995 604.400024 137.759995 586.159973 c
137.759995 566.779968 141.360001 552.97998 148.679993 544.640015 c
155.940002 536.359985 166.080002 532.219971 179.100006 532.219971 c
185.279999 532.219971 191.220001 533.119995 196.800003 534.859985 c
202.440002 536.659973 208.860001 539.719971 216.119995 544.039978 c
216.119995 560.900024 l
179.100006 560.900024 l
h
387.359985 560.900024 m
387.359985 598.100037 l
472.859985 598.100037 l
472.859985 521.839966 l
456.47998 510.679993 442.019989 503.059998 429.419983 499.039978 c
416.880005 495.019989 401.940002 493.039978 384.660004 493.039978 c
363.419983 493.039978 346.139984 496.639984 332.759979 503.899994 c
319.380005 511.100006 309.0 521.900024 301.619995 536.23999 c
294.23999 550.580017 290.579987 567.019958 290.579987 585.559998 c
290.579987 605.059998 294.600006 622.039978 302.639984 636.5 c
310.73999 650.959961 322.5 661.940002 338.039978 669.440002 c
350.160004 675.200012 366.47998 678.079956 387.0 678.079956 c
406.800018 678.079956 421.559998 676.279968 431.399994 672.73999 c
441.179993 669.140015 449.339996 663.559998 455.819977 656.059998 c
462.300018 648.5 467.160004 638.959961 470.399994 627.440002 c
417.059998 617.900024 l
414.839996 624.679993 411.119995 629.839966 405.899994 633.380005 c
400.619995 636.97998 393.899994 638.779968 385.800018 638.779968 c
373.679993 638.779968 364.019989 634.579956 356.819977 626.119995 c
349.619995 617.719971 346.019989 604.400024 346.019989 586.159973 c
346.019989 566.779968 349.619995 552.97998 356.940002 544.640015 c
364.200012 536.359985 374.339996 532.219971 387.359985 532.219971 c
393.539978 532.219971 399.47998 533.119995 405.059998 534.859985 c
410.700012 536.659973 417.119995 539.719971 424.380005 544.039978 c
424.380005 560.900024 l
387.359985 560.900024 l
f
n
179.100006 208.400009 m
179.100006 245.600006 l
264.600006 245.600006 l
264.600006 169.339996 l
248.220001 158.179993 233.759995 150.559998 221.159988 146.539993 c
208.619995 142.520004 193.679993 140.539993 176.400009 140.539993 c
155.160004 140.539993 137.87999 144.139999 124.5 151.400009 c
111.119995 158.600006 100.739998 169.400009 93.360001 183.73999 c
85.979996 198.080002 82.32 214.519989 82.32 233.059998 c
82.32 252.559998 86.339996 269.540009 94.379997 284.0 c
102.479996 298.459991 114.239998 309.440002 129.779999 316.940002 c
141.900009 322.700012 158.220001 325.579987 178.73999 325.579987 c
198.539993 325.579987 213.300003 323.779999 223.139999 320.23999 c
232.919998 316.639984 241.080002 311.059998 247.559998 303.559998 c
254.039993 296.0 258.899994 286.459991 262.139984 274.940002 c
208.800003 265.399994 l
206.580002 272.179993 202.860001 277.339996 197.639999 280.880005 c
192.360001 284.47998 185.639999 286.279999 177.539993 286.279999 c
165.419998 286.279999 155.759995 282.079987 148.559998 273.619995 c
141.360001 265.220001 137.759995 251.900009 137.759995 233.659988 c
137.759995 214.279999 141.360001 200.479996 148.679993 192.139999 c
155.940002 183.860001 166.080002 179.720001 179.100006 179.720001 c
185.279999 179.720001 191.220001 180.619995 196.800003 182.360001 c
202.440002 184.159988 208.860001 187.220001 216.119995 191.539993 c
216.119995 208.400009 l
179.100006 208.400009 l
h
387.359985 208.400009 m
387.359985 245.600006 l
472.859985 245.600006 l
472.859985 169.339996 l
456.47998 158.179993 442.019989 150.559998 429.419983 146.539993 c
416.880005 142.520004 401.940002 140.539993 384.660004 140.539993 c
363.419983 140.539993 346.139984 144.139999 332.759979 151.400009 c
319.380005 158.600006 309.0 169.400009 301.619995 183.73999 c
294.23999 198.080002 290.579987 214.519989 290.579987 233.059998 c
290.579987 252.559998 294.600006 269.540009 302.639984 284.0 c
310.73999 298.459991 322.5 309.440002 338.039978 316.940002 c
350.160004 322.700012 366.47998 325.579987 387.0 325.579987 c
406.800018 325.579987 421.559998 323.779999 431.399994 320.23999 c
441.179993 316.639984 449.339996 311.059998 455.819977 303.559998 c
462.300018 296.0 467.160004 286.459991 470.399994 274.940002 c
417.059998 265.399994 l
414.839996 272.179993 411.119995 277.339996 405.899994 280.880005 c
400.619995 284.47998 393.899994 286.279999 385.800018 286.279999 c
373.679993 286.279999 364.019989 282.079987 356.819977 273.619995 c
349.619995 265.220001 346.019989 251.900009 346.019989 233.659988 c
346.019989 214.279999 349.619995 200.479996 356.940002 192.139999 c
364.200012 183.860001 374.339996 179.720001 387.359985 179.720001 c
393.539978 179.720001 399.47998 180.619995 405.059998 182.360001 c
410.700012 184.159988 417.119995 187.220001 424.380005 191.539993 c
424.380005 208.400009 l
387.359985 208.400009 l
f
n
userdict /pgsave get restore
showpage
PDFVars/TermAll get exec end end
grestore
%%PageTrailer
%%Page: 9 9
%%PageBoundingBox: 0 0 595 842
%%PageHiResBoundingBox: 0.0 0.0 595.0 842.0
%%PageCropBox:  0 0 595 842
gsave
%%BeginPageSetup
{<</PageSize [595.0 842.0] /Policies <</PageSize 1>> >> setpagedevice }stopped pop
PDFVars begin PDF begin PDFVars/InitAll get exec
userdict /pgsave save put
0.0 0.0 595.0 842.0 0.0 0.0 595.0 842.0 0 0 false true false false PDF begin PDFVars begin ASR end end
%%EndPageSetup
0.0 0.0 595.0 842.0 re
W
n
n
91.32 675.019958 m
91.32 675.019958 55.439995 -178.97998 re
188.639999 675.019958 m
188.639999 675.019958 55.440002 -178.97998 re
f
n
91.32 322.519989 m
91.32 322.519989 55.439995 -178.979996 re
188.639999 322.519989 m
188.639999 322.519989 55.440002 -178.979996 re
f
n
userdict /pgsave get restore
showpage
PDFVars/TermAll get exec end end
grestore
%%PageTrailer
%%Page: 11 11
%%PageBoundingBox: 0 0 595 842
%%PageHiResBoundingBox: 0.0 0.0 595.0 842.0
%%PageCropBox:  0 0 595 842
gsave
%%BeginPageSetup
{<</PageSize [595.0 842.0] /Policies <</PageSize 1>> >> setpagedevice }stopped pop
PDFVars begin PDF begin PDFVars/InitAll get exec
userdict /pgsave save put
0.0 0.0 595.0 842.0 0.0 0.0 595.0 842.0 0 0 false true false false PDF begin PDFVars begin ASR end end
%%EndPageSetup
0.0 0.0 595.0 842.0 re
W
n
n
89.400002 675.019958 m
144.660004 675.019958 l
144.660004 607.400024 l
202.679993 675.019958 l
276.179993 675.019958 l
210.959991 607.519958 l
279.119995 496.039978 l
210.959991 496.039978 l
173.279999 569.659973 l
144.660004 539.779968 l
144.660004 496.039978 l
89.400002 496.039978 l
89.400002 675.019958 l
h
297.660004 675.019958 m
352.919983 675.019958 l
352.919983 607.400024 l
410.940002 675.019958 l
484.440002 675.019958 l
419.220001 607.519958 l
487.379974 496.039978 l
419.220001 496.039978 l
381.539978 569.659973 l
352.919983 539.779968 l
352.919983 496.039978 l
297.660004 496.039978 l
297.660004 675.019958 l
f
n
89.400002 322.519989 m
144.660004 322.519989 l
144.660004 254.900009 l
202.679993 322.519989 l
276.179993 322.519989 l
210.959991 255.019989 l
279.119995 143.539993 l
210.959991 143.539993 l
173.279999 217.159988 l
144.660004 187.279999 l
144.660004 143.539993 l
89.400002 143.539993 l
89.400002 322.519989 l
h
297.660004 322.519989 m
352.919983 322.519989 l
352.919983 254.900009 l
410.940002 322.519989 l
484.440002 322.519989 l
419.220001 255.019989 l
487.379974 143.539993 l
419.220001 143.539993 l
381.539978 217.159988 l
352.919983 187.279999 l
352.919983 143.539993 l
297.660004 143.539993 l
297.660004 322.519989 l
f
n
userdict /pgsave get restore
showpage
PDFVars/TermAll get exec end end
grestore
%%PageTrailer
%%Page: 12 12
%%PageBoundingBox: 0 0 595 842
%%PageHiResBoundingBox: 0.0 0.0 595.0 842.0
%%PageCropBox:  0 0 595 842
gsave
%%BeginPageSetup
{<</PageSize [595.0 842.0] /Policies <</PageSize 1>> >> setpagedevice }stopped pop
PDFVars begin PDF begin PDFVars/InitAll get exec
userdict /pgsave save put
0.0 0.0 595.0 842.0 0.0 0.0 595.0 842.0 0 0 false true false false PDF begin PDFVars begin ASR end end
%%EndPageSetup
0.0 0.0 595.0 842.0 re
W
n
n
89.159996 675.019958 m
144.419998 675.019958 l
144.419998 540.140015 l
230.759995 540.140015 l
230.759995 496.039978 l
89.159996 496.039978 l
89.159996 675.019958 l
h
255.900009 675.019958 m
311.160004 675.019958 l
311.160004 540.140015 l
397.5 540.140015 l
397.5 496.039978 l
255.900009 496.039978 l
255.900009 675.019958 l
f
n
89.159996 322.519989 m
144.419998 322.519989 l
144.419998 187.639999 l
230.759995 187.639999 l
230.759995 143.539993 l
89.159996 143.539993 l
89.159996 322.519989 l
h
255.900009 322.519989 m
311.160004 322.519989 l
311.160004 187.639999 l
397.5 187.639999 l
397.5 143.539993 l
255.900009 143.539993 l
255.900009 322.519989 l
f
n
userdict /pgsave get restore
showpage
PDFVars/TermAll get exec end end
grestore
%%PageTrailer
%%Trailer
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%EOF
