%!PS-Adobe-3.0 Query
%%Title: Program for dumping the page device dictionary to stdout
%%Copyright: Copyright (C) 2000 by Martin Lottermoser. All rights reserved.
%%Creator: Martin Lottermoser, Greifswaldstrasse 28, 38124 Braunschweig, Germany. E-mail: Martin.Lottermoser@t-online.de.
%%CreationDate: $Date: 2000/10/22 09:20:00 $
%%EndComments

%******************************************************************************

%%?BeginQuery: dumppdd
% @(#)$Id: dumppdd.ps,v 1.5 2000/10/22 09:20:00 Martin Rel $

%%BeginResource: procset mjl-sort 1.3 0
% @(#)$OriginalId: sort.ps,v 1.3 1997/10/21 04:50:37 mjl Exp $
/mjl-sort-dict where { pop } { /mjl-sort-dict 6 dict def mjl-sort-dict
begin /temp1 100 string def /temp2 100 string def /Vergleich { dup type dup
/integertype eq 1 index /realtype eq or 1 index /stringtype eq or exch pop
not { temp2 cvs exch temp1 cvs exch } if le } def /SortierteKeys { dup length
array 2 dict begin /a exch def /j 0 def { pop a j 3 -1 roll put /j j 1 add
def } forall a end ArraySortieren } def /ArraySortieren { 1 dict begin /a
exch def 0 a length 1 sub dup 0 gt {SubarraySortieren} {pop pop} ifelse a
end } def /SubarraySortieren { 6 dict begin /rechts exch def /links exch
def /i links def /j rechts def /Wert a links rechts add 2 idiv get def {
{ Wert a i get Vergleich {exit} if /i i 1 add def } loop { a j get Wert
Vergleich {exit} if /j j 1 sub def } loop i j le { /w a i get def a i a
j get put a j w put /i i 1 add def /j j 1 sub def } if i j gt {exit} if }
loop links j i rechts end dup 3 -1 roll dup 4 1 roll gt {SubarraySortieren}
{pop pop} ifelse dup 3 -1 roll dup 4 1 roll gt {SubarraySortieren} {pop pop}
ifelse } def end } ifelse
%%EndResource

%%BeginResource: procset glglMitDict 1.1 0
% @(#)$OriginalId: glglMitDict.ps,v 1.2 2000-07-23 18:52:39+02 Martin Exp $
% Copyright (C) 1999, 2000 by Martin Lottermoser. All rights reserved.
/glglDict where {pop} { 10 dict begin /temp 200 string def /zeige_Leerzeichen
{ {( ) print} repeat } def /Einrueckung 0 def /integertype { temp cvs print }
def /nametype { (/) print temp cvs print } def /dicttype { (<<) = /Einrueckung
Einrueckung 2 add def [ 1 index {pop} forall ] /mjl-sort-dict where { pop
mjl-sort-dict begin ArraySortieren end } if { Einrueckung zeige_Leerzeichen
dup zeige_Objekt not { Einrueckung 1 add zeige_Leerzeichen } if ( ) print 1
index exch get zeige_Objekt {() =} if } forall pop /Einrueckung Einrueckung
2 sub def Einrueckung zeige_Leerzeichen (>>) print } def /zeige_Objekt {
dup type glglDict 1 index known { glglDict exch get exec true } { pop ==
false } ifelse } bind def currentdict end /glglDict exch def /=== { glglDict
begin zeige_Objekt {() =} if end } bind def } ifelse
%%EndResource

%------------------------------------------------------------------------------

() =
(Current Page Device Dictionary Contents) =
(=======================================) =

currentpagedevice ===

%------------------------------------------------------------------------------

%%?EndQuery: Failed to access the PostScript interpreter.

%******************************************************************************

%%EOF
